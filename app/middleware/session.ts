import { Context } from 'koa';\nimport { verifyAuth0Token } from '../config/auth';\n\nexport async function sessionMiddleware(ctx: Context, next: Function) {\n  const token = ctx.get('token');\n\n  if (!token) {\n    ctx.status = 401;\n    ctx.body = 'Not authenticated';\n    await new Promise(resolve => resolve());\n    return next();\n  }\n\n  try {\n    const { isAuth0Token, payload } = await verifyAuth0Token(token);\n\n    if (!isAuth0Token) {\n      throw new Error('Invalid token');\n    }\n\n    // Store the user in Koa's context for session management\n    ctx.user = payload;\n  } catch (err) {\n    console.error('Authentication error:', err);\n    ctx.status = 500;\n    ctx.body = 'Authentication failed';\n    await new Promise(resolve => resolve());\n    return next();\n  }\n}\n
